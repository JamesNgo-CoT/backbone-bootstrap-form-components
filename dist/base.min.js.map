{"version":3,"sources":["base.min.js"],"names":["_typeof","Symbol","iterator","obj","constructor","prototype","_toConsumableArray","arr","Array","isArray","i","arr2","length","from","_defineProperty","key","value","Object","defineProperty","enumerable","configurable","writable","Backbone","Model","Base","extend","attributeTypes","get","attr","opts","recursive","segs","split","shift","val","this","isModel","hasOwnProperty","Collection","join","index","at","call","set","arguments","k","args","Function","bind","apply","String","concat","valueOf","_args","_args2","_args3","toJSON","json","deep","model","View"],"mappings":"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","file":"base.min.js","sourcesContent":["'use strict';\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n/* global Backbone */\n\n////////////////////////////////////////////////////////////////////////////////\n\nBackbone.Model.Base = Backbone.Model.extend({\n  attributeTypes: {},\n\n  get: function get(attr, opts) {\n    if (opts.recursive === true) {\n      var segs = attr.split(/(\\[|\\]|\\.)+/);\n      attr = segs.shift();\n      var val = this.get(attr, { recursive: false });\n\n      var isModel = false;\n      if (this.attributeTypes.hasOwnProperty(attr) && this.attributeTypes[attr] && typeof this.attributeTypes[attr] === 'function' && ((isModel = this.attributeTypes[attr] === Backbone.Model.Base || this.attributeTypes[attr].prototype instanceof Backbone.Model.Base) || this.attributeTypes[attr] === Backbone.Collection || this.attributeTypes[attr].prototype instanceof Backbone.Collection) && val instanceof this.attributeTypes[attr]) {\n\n        if (isModel) {\n          if (segs.length > 0) {\n            return val.get(segs.join('.'), { recursive: true });\n          }\n        } else {\n          if (segs.length > 0) {\n            var index = +segs.shift();\n            if (segs.length > 0) {\n              return val.at(index).get(segs.join('.'), { recursive: true });\n            }\n          }\n        }\n      }\n\n      return val;\n    } else {\n      return Backbone.Model.prototype.get.call(this, attr);\n    }\n  },\n\n  set: function set(attr, opts) {\n    if (typeof attr === 'string') {\n      attr = _defineProperty({}, attr, arguments[1]);\n      opts = arguments[2];\n    }\n\n    for (var k in this.attributeTypes) {\n      if (this.attributeTypes.hasOwnProperty(k) && this.attributeTypes[k] && attr.hasOwnProperty(k) && attr[k]) {\n\n        if (typeof this.attributeTypes[k] === 'string' && _typeof(attr[k]) !== this.attributeTypes[k]) {\n          // Primitive types.\n\n          switch (this.attributeTypes[k]) {\n            case 'boolean':\n              {\n                var args = Array.isArray(attr[k]) ? attr[k] : [attr[k]];\n                attr[k] = new (Function.prototype.bind.apply(String, [null].concat(_toConsumableArray(args))))().valueOf();\n              }\n              break;\n\n            case 'number':\n              {\n                var _args = Array.isArray(attr[k]) ? attr[k] : [attr[k]];\n                attr[k] = new (Function.prototype.bind.apply(String, [null].concat(_toConsumableArray(_args))))().valueOf();\n              }\n              break;\n\n            case 'string':\n              {\n                var _args2 = Array.isArray(attr[k]) ? attr[k] : [attr[k]];\n                attr[k] = new (Function.prototype.bind.apply(String, [null].concat(_toConsumableArray(_args2))))().valueOf();\n              }\n              break;\n          }\n        } else if (typeof this.attributeTypes[k] === 'function' && !(attr[k] instanceof this.attributeTypes[k])) {\n          // Object types.\n\n          var _args3 = Array.isArray(attr[k]) ? attr[k] : [attr[k]];\n          attr[k] = new (Function.prototype.bind.apply(this.attributeTypes[k], [null].concat(_toConsumableArray(_args3))))();\n        }\n      }\n    }\n\n    return Backbone.Model.prototype.set.call(this, attr, opts);\n  },\n\n  toJSON: function toJSON(opts) {\n    var json = Backbone.Model.prototype.toJSON.call(this, opts);\n\n    if (opts.deep === true) {\n      for (var k in this.attributeTypes) {\n        var val = this.get(k);\n        if (this.attributeTypes.hasOwnProperty(k) && this.attributeTypes[k] && typeof this.attributeTypes[k] === 'function' && (this.attributeTypes[k] === Backbone.Model || this.attributeTypes[k].prototype instanceof Backbone.Model || this.attributeTypes[k] === Backbone.Collection || this.attributeTypes[k].prototype instanceof Backbone.Collection) && val instanceof this.attributeTypes[k]) {\n\n          json[k] = val.toJSON();\n        }\n      }\n    }\n\n    return json;\n  }\n});\n\n////////////////////////////////////////////////////////////////////////////////\n\nBackbone.Collection.Base = Backbone.Collection.extend({\n  model: Backbone.Model.Base\n});\n\n////////////////////////////////////////////////////////////////////////////////\n\nBackbone.View.Base = Backbone.View.extend({});"]}